execute pathogen#infect()
execute pathogen#helptags()
" BOOTSTRAP BY EMPLOYING PATHOGEN
" 
" LINUX: 
"   curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
"   mkdir ~/.vim/bundle
"   git clone into the new directory
" WINDOWS: 
"   copy https://raw.githubusercontent.com/tpope/vim-pathogen/master/autoload/pathogen.vim to c:\program files (x86)\vim\vim74\autoload\
"   make folder c:\program files (x86)\vim\vim74\bundle
"   git clone in to the folder
"
" CONFIG DIALED IN FOR FOLLOWING PLUGINS:
" git clone https://github.com/vim-airline/vim-airline.git
" git clone https://github.com/vim-airline/vim-airline-themes.git
" git clone https://github.com/scrooloose/syntastic.git
" git clone git://github.com/tpope/vim-fugitive.git
" git clone https://github.com/davidhalter/jedi-vim.git
" git clone https://github.com/kien/ctrlp.vim.git
" git clone https://github.com/vim-scripts/dbext.vim.git
" git clone https://github.com/dbarsam/vim-vimtweak.git (windows only)
" WINDOWS GVIM OPTIONS {
    set nocompatible
    set nocp
    filetype plugin on
    source $VIMRUNTIME/vimrc_example.vim
    source $VIMRUNTIME/mswin.vim
    set guioptions=T
    set guioptions=m
    set guioptions=r
    behave mswin
    set backup
    set backupdir=C:\WINDOWS\Temp
    set backupskip=C:\WINDOWS\Temp\*
    set directory=C:\WINDOWS\Temp
    set writebackup
    set undodir=C:\WINDOWS\Temp
    set foldmethod=indent   
    set foldnestmax=10
    set nofoldenable
    set foldlevel=2
    nnoremap <Space> za
" }
" GENERAL SETTINGS {
    colorscheme cyberpunk
    set tabstop=4
    set expandtab
    set rnu
    set nu
    set shiftwidth=4
    :set guioptions-=T  "remove toolbar
    vnoremap <Leader>rp <cr><esc>
    "K splits lines for me, or the opposite of J. K = i + <CR> + <Esc>
    :nnoremap K i<CR><Esc>
    let g:Perl_Perl = 'C:\Perl64\bin\perl.exe' "need to install 32 bit DWIM Perl to ensure VIM recognized perl support
    set hidden "allows you to switch between buffers without requiring saving
    au BufRead,BufNewFile *.cshtml setfiletype html
" }
" AIRLINE (need to install custom fonts for full effect) {
    set laststatus=2
    let g:airline_left_sep = '?'
    let g:airline_left_alt_sep = '?'
    let g:airline_right_sep = '?'
    let g:airline_right_alt_sep = '?'
    let g:airline_branch_prefix = '?'
    let g:airline_readonly_symbol = '?'
    let g:airline_linecolumn_prefix = '?'
    set t_Co=256
    let g:airline_powerline_fonts = 1
    let g:airline_theme='laederon'
    set encoding=utf-8
    set guifont=Inconsolata-dz\ for\ Powerline:h13
" }
" CTRLP
    let g:ctrlp_working_path_mode = 'r'
    let g:ctrlp_max_files=0
    let g:ctrlp_max_depth=40
" }
" SYNTASTIC (need to install pylint) {
    let g:syntastic_python_checkers = ['pylint']
    let g:syntastic_always_populate_loc_list = 0
    let g:syntastic_auto_loc_list = 0
    let g:syntastic_check_on_open = 1
    let g:syntastic_check_on_wq = 0
    let g:syntastic_enable_highlighting=0
    let g:syntastic_cs_checkers = ['syntax', 'semantic', 'issues']
" }
" DBEXT {
    let g:dbext_default_buffer_lines=15
    let g:dbext_default_profile_benchmarkingblue = 'type=pgsql:dbname=benchmarking:port=5439:user=pweissbrod_blue:host=benchmarking-blue.ciicjntcwxqv.us-east-1.redshift.amazonaws.com'
    let g:dbext_default_profile_benchmarkinggreen = 'type=pgsql:dbname=dev:port=5439:user=pweissbrod_green:host=benchmarking-green.ciicjntcwxqv.us-east-1.redshift.amazonaws.com:extra=sslmode=allow'
    let g:dbext_default_profile_benchmarkinggreenlab = 'type=pgsql:dbname=dev:port=5439:user=lab_green:host=benchmarking-green.ciicjntcwxqv.us-east-1.redshift.amazonaws.com'
    let g:dbext_default_profile_impala = 'type=ODBC:dsnname=impaladsn32'
    let g:dbext_default_profile = 'impala'
" }
" SQLUFORMATTER {
    vmap <leader>sqf :SQLUFormatter<cr>
" }
" VIMTWEAK {
    let g:vimtweak_focus_transparency_gained_value=30
" }
" OMNISHARP {
" Get Code Issues and syntax errors
" If you are using the omnisharp-roslyn backend, use the following
" let g:syntastic_cs_checkers = ['code_checker']
augroup omnisharp_commands
    autocmd!

    "Set autocomplete function to OmniSharp (if not using YouCompleteMe completion plugin)
    autocmd FileType cs setlocal omnifunc=OmniSharp#Complete

    " Synchronous build (blocks Vim)
    "autocmd FileType cs nnoremap <F5> :wa!<cr>:OmniSharpBuild<cr>
    " Builds can also run asynchronously with vim-dispatch installed
    autocmd FileType cs nnoremap <leader>b :wa!<cr>:OmniSharpBuildAsync<cr>
    " automatic syntax check on events (TextChanged requires Vim 7.4)
    autocmd BufEnter,TextChanged,InsertLeave *.cs SyntasticCheck

    " Automatically add new cs files to the nearest project on save
    autocmd BufWritePost *.cs call OmniSharp#AddToProject()

    "show type information automatically when the cursor stops moving
    autocmd CursorHold *.cs call OmniSharp#TypeLookupWithoutDocumentation()

    "The following commands are contextual, based on the current cursor position.

    autocmd FileType cs nnoremap gd :OmniSharpGotoDefinition<cr>
    autocmd FileType cs nnoremap <leader>fi :OmniSharpFindImplementations<cr>
    autocmd FileType cs nnoremap <leader>ft :OmniSharpFindType<cr>
    autocmd FileType cs nnoremap <leader>fs :OmniSharpFindSymbol<cr>
    autocmd FileType cs nnoremap <leader>fu :OmniSharpFindUsages<cr>
    "finds members in the current buffer
    autocmd FileType cs nnoremap <leader>fm :OmniSharpFindMembers<cr>
    " cursor can be anywhere on the line containing an issue
    autocmd FileType cs nnoremap <leader>x  :OmniSharpFixIssue<cr>
    autocmd FileType cs nnoremap <leader>fx :OmniSharpFixUsings<cr>
    autocmd FileType cs nnoremap <leader>tt :OmniSharpTypeLookup<cr>
    autocmd FileType cs nnoremap <leader>dc :OmniSharpDocumentation<cr>
    "navigate up by method/property/field
    autocmd FileType cs nnoremap <C-K> :OmniSharpNavigateUp<cr>
    "navigate down by method/property/field
    autocmd FileType cs nnoremap <C-J> :OmniSharpNavigateDown<cr>

augroup END
" }

